Scala map Function
The map function in Scala is used to transform each element in a collection and return a new collection with the transformed values. It’s a fundamental concept in functional programming.

Why Use map?
Transformation: Applies a function to every element in a collection.
Immutable Operations: It does not modify the original collection but returns a new one.
Eliminates Loops: Reduces the need for for loops, making code cleaner and more readable.
Works with Parallel Processing: Useful in distributed computing frameworks like Apache Spark. </p>

The flatMap function is a combination of map and flatten. It applies a function to each element in a collection, which itself returns a collection, and then flattens the result into a single list.

Why Use flatMap?
✅ Removes Nested Structures: Flattens lists of lists into a single list.
✅ Useful for Data Transformation: Helps break down complex data.
✅ Common in Spark: Used in distributed data processing (RDD transformations).

Use Case: Tokenizing Sentences into Words
Scenario
You are building a text processing system where you have a list of sentences, and you need to extract all the words individually.

